function [selfdetector,selfdetectornum] = cluster( A,n,t,hc,selfradius,pp) 
                        %tï¿½Ç¾ï¿½ï¿½ï¿½dcï¿½ï¿½ï¿½ï¿½Òªï¿½ï¿½ï¿½ï¿½
                       
guige=5;   %10*10ï¿½ï¿½Õ¤ï¿½ï¿½
xjiange=1/guige;
yjiange=1/guige;

ylow=zeros(guige,guige);   %Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½yï¿½ï¿½ï¿½ï¿½
yhigh=zeros(guige,guige);   %Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½yï¿½ï¿½ï¿½ï¿½   
maxzhi=zeros(guige,guige);     %Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¹ï¿½Ò»ï¿½ï¿½cgemaï¿½ï¿½ï¿½Ö?  
junfang=zeros(guige,guige); %Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¹ï¿½Ò»ï¿½ï¿½cgemaï¿½ï¿½Öµ
geshu=zeros(guige,guige);   %Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð¶ï¿½ï¿½Ùµï¿½
location=zeros(n,2);            %ï¿½ï¿½Â¼Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½Õ¤ï¿½ï¿?
cenfangge=zeros(guige,guige);  %ï¿½ï¿½Ê¶ï¿½ï¿½Ð©ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Äµï¿½ï¿½Ç¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?

for i=1:1:guige              %ï¿½ï¿½×¼ï¿½ï¿½10*10ï¿½ï¿½ï¿½Ö®ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    for j=1:1:guige
        ylow(guige+1-i,j)=yjiange*(i-1);
        yhigh(guige+1-i,j)=yjiange*i;
    end
end

M=n*(n-1)/2;
k=M*t;
k=fix(k);  %È¡ï¿½ï¿½
dis_matrix=zeros(n,n);           %n*nï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
dis_vector=zeros(1,M);           %ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
rho_vector=zeros(n,2);           %ï¿½Ú¶ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ü¶ï¿½ï¿½ï¿½ï¿½ï¿?ï¿½ï¿½Ò»ï¿½ï¿½Îªï¿½ï¿½Å£ï¿½ï¿½ï¿½ï¿½ï¿½centerrhominï¿½ï¿½
cgema_vector=zeros(n,2);         %ï¿½Ú¶ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½cgemaï¿½ï¿½ï¿½ï¿½,ï¿½ï¿½Ò»ï¿½ï¿½Îªï¿½ï¿½ï¿?


global decision;
decision=zeros(n,6);             %ï¿½ï¿½Ò»ï¿½ï¿½Îªrhoï¿½ï¿½ï¿½Ú¶ï¿½ï¿½ï¿½Îªcgema,ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½ï¿½ÖµÝ¹ï¿½ï¿½ï¿½ï¿½ï¿½
                                 %ï¿½ï¿½5ï¿½ï¿½Îªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
                                  %ï¿½ï¿½6ï¿½ï¿½ï¿½ï¿½ï¿½coreï¿½ï¿½haloï¿½ï¿½1ï¿½ï¿½Ê¾haloï¿½ï¿½0ï¿½ï¿½Ê¾core
                                 %ï¿½ï¿½7ï¿½ï¿½  ï¿½ï¿½Ôµ          
centersnum=0;
selfdetectornum=0;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
dis=0;
kk=0;
for i=1:1:n
    dis_matrix(i,i)=0;
end
for i=1:1:n
    for j=i+1:1:n   
        dis=( A(i,1)-A(j,1) )^2+(  A(i,2)-A(j,2) )^2;
        dis=dis^0.5;
        dis_matrix(i,j)=dis;
        dis_matrix(j,i)=dis;
        kk=kk+1;
        dis_vector(kk)=dis;    
    end
end
dis_vector=sort(dis_vector);   %ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
dc=dis_vector(k);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for i=1:1:n-1                     %ï¿½ï¿½ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½Ü¶ï¿½
    for j=i+1:1:n   
        dis=dis_matrix(i,j)/dc;
        decision(i,1)=decision(i,1)+exp(-dis*dis);
        decision(j,1)=decision(j,1)+exp(-dis*dis);
    end
end
for i=1:1:n
    rho_vector(i,1)=i;
    rho_vector(i,2)=decision(i,1);
end
rho_vector=sortrows(rho_vector,-2);  %rho_vector(1,2)Îªï¿½Ü¶ï¿½ï¿½ï¿½ï¿½Ö?
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for i=1:1:n                   % ï¿½ï¿½ï¿½ï¿½diï¿½ï¿½ï¿½ï¿½ÃµÝ¹ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ý¹ï¿½ï¿½ï¿½Îªï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
        decision(i,2)=dis_vector(M);
        for j=1:1:n      
            if  i~=j
                if  decision(j,1)>decision(i,1)  
                    if dis_matrix(i,j)<decision(i,2)
                        decision(i,2)=dis_matrix(i,j);    
                        decision(i,4)=j;
                    end
                end  
            end
        end 
end
for i=1:1:n
    cgema_vector(i,1)=i;
    cgema_vector(i,2)=decision(i,2);
end
cgema_vector=sortrows(cgema_vector,-2);  %cgema_vector(1,2)Îªcgemaï¿½ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô¶ï¿½ï¿½Ò»ï¿½Ô¾ï¿½ï¿½ï¿?
%% cigma_rho Í¼Æ¬
for i=1:1:n          %cgema,rhoï¿½ï¿½Ò»ï¿½ï¿½
    decision(i,1)=decision(i,1)/rho_vector(1,2);
    decision(i,2)=decision(i,2)/cgema_vector(1,2);
end
hc1=rho_vector(floor((1-pp)*n),2)/rho_vector(1,2);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
adjust=1;
%% cigma_rho ï¿½ï¿½Ò»ï¿½ï¿½
while adjust==1              %ï¿½Òµï¿½ï¿½ï¿½ï¿½ï¿½Êµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê½ï¿½ï¿½ï¿½ï¿½È¡cgemaÆ½ï¿½ï¿½Öµï¿½ï¿½ï¿½ó£¬¸ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
      adjust=0;
    check=zeros(n);
    geshu=zeros(guige,guige);   %Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð¶ï¿½ï¿½Ùµï¿½
    for i=1:1:guige       %ï¿½ï¿½
        for j=1:1:guige       %ï¿½ï¿½
            xmax=xjiange*j;
            xmin=xmax-xjiange;
            ymax=yhigh(guige+1-i,j);
            ymin=ylow(guige+1-i,j);
            for ii=1:1:n
                if check(ii)==0
                    if decision(ii,1)<=xmax&&decision(ii,1)>xmin
                        if decision(ii,2)<=ymax&&decision(ii,2)>ymin
                            location(ii,1)=i;
                            location(ii,2)=j;
                            geshu(guige+1-i,j)=geshu(guige+1-i,j)+1;
                            check(ii)=1;
                        end
                    end
                end
            end
        end
    end

    check=zeros(n);        %ï¿½ï¿½ï¿½ï¿½Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ú¹ï¿½Ò»ï¿½ï¿½cgemaï¿½ï¿½Æ½ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Öµï¿½ï¿½Æ½ï¿½ï¿½Öµï¿½ï¿½Ü¶à£¬ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    for i=1:1:guige
        for j=1:1:guige
            qiujunfangshuzu=zeros(1,1);
            xxxxxnum=0;
            for ii=1:1:n
                if check(ii)==0
                    if location(ii,1)==i&&location(ii,2)==j
                        xxxxxnum=xxxxxnum+1;
                        qiujunfangshuzu(xxxxxnum)=decision(ii,2);
                        check(ii)=1;
                    end
                end
            end
            junfang(guige+1-i,j)=mean(qiujunfangshuzu);  
            maxzhi(guige+1-i,j)=max(qiujunfangshuzu);
        
        
            if maxzhi(guige+1-i,j)-junfang(guige+1-i,j)>yjiange/2
                qiujunfangshuzu=sort(qiujunfangshuzu,'descend');
                s=0;
                for xx=1:1:xxxxxnum-1
                    if qiujunfangshuzu(xx)-qiujunfangshuzu(xx+1)>yjiange/2
                        s=1;
                        break;
                    end
                end
                if s==1
                    yhigh(guige+1-i,j)=qiujunfangshuzu(xx+1)+0.01;
                    ylow(guige-i,j)=qiujunfangshuzu(xx+1)+0.01;
                    adjust=1;
                end
            end    
        end
    end
end   
for i=guige-1:1:guige    %ï¿½ï¿½ï¿½Ï·ï¿½ï¿½ï¿½4ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ç¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    for j=guige-1:1:guige
        cenfangge(guige+1-i,j)=1;
    end
end

for j=2:1:guige                    %ï¿½ï¿½Îªï¿½ï¿½Ò»ï¿½ÐºÍµï¿½Ò»ï¿½ÐµÄµï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½Ç¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    for i=2:1:guige
        if geshu(guige+1-i,j)~=0
            beishu=i*(junfang(guige+1-i,j)-junfang(guige,j))^2;
            beishu=1/beishu;
            sjbs=geshu(guige,j)/geshu(guige+1-i,j);
            if sjbs>beishu
                cenfangge(guige+1-i,j)=1;
            end
        end
        if cenfangge(guige+1-i,j)==1
            for ii=1:1:n
                if location(ii,1)==i&&location(ii,2)==j
                    centersnum=centersnum+1;
                    result(1,centersnum)=ii;   %resultï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½Ä¸ï¿½ï¿½ï¿½ï¿½Ò»ï¿½Ð¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÄµÄ±ï¿½Å£ï¿½decisionÎ´ï¿½ï¿½ï¿½ï¿½                                              
                    decision(ii,5)=centersnum;         
                end
            end
        end  
    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

for i=1:1:n             %ï¿½Ý¹é»®ï¿½ï¿½
    if  decision(i,5)==0
        j=decision(i,4);
        decision(i,5)=diguihuafen(j);
    end
end    
for i=1:1:n             %ï¿½ï¿½ï¿½Ô±ß½ï¿½
    if decision(i,1)<hc1
        decision(i,7)=1;
    end
end    
%% ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¾
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
rhoofclusters=0;
check=zeros(n);
for i=1:1:centersnum
    nn=0;
    for j=1:1:n
        if check(j)==0
            if decision(j,5)==i
                nn=nn+1;
                rhoofclusters(nn,i)=decision(j,1);
                check(j)=1;     
            end
        end
    end
end


pb=zeros(1,centersnum);  %pbÎªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä±ß½ï¿½ï¿½Ü¶ï¿½ï¿½Ï½ç£¬ï¿½Â±ï¿½Îªï¿½ï¿½ï¿½
for i=1:1:n  %ï¿½ï¿½ï¿½ï¿½ß½ï¿½ï¿½Ü¶ï¿½ï¿½Ï½ï¿?
    ci=decision(i,5);
    pi=decision(i,1);
    for j=i+1:1:n
        if(i~=j)&&( dis_matrix(i,j)<dc )             
            cj=decision(j,5);
            if  ci~=cj              
                pj=decision(j,1);
                p_average=(pi+pj)/2;
                if p_average>pb(ci)
                    pb(ci)=p_average;
                elseif p_average>pb(cj)
                    pb(cj)=p_average;
                end
            end
        end
    end
end    

for i=1:1:centersnum
    if pb(i)==0
        pb(i)=min(rhoofclusters(:,i));
    end
        pimax=decision(result(1,i),1);
        ppi=pimax-pb(i);
        pb(i)=ppi/hc+pb(i);
end

for i=1:1:n              % 1ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½Ðµï¿½haloï¿½ï¿½0ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½Ðµï¿½core
    c=decision(i,5);
    if decision(i,1)<=pb(c)
        decision(i,6)=1;
    end
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %ï¿½Ô¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÎªÔ²ï¿½Ä£ï¿½ï¿½Ô¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Äµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô¼ï¿½ï¿½ï¿½ÄºÚµï¿½Ä¾ï¿½ï¿½ï¿½Îªï¿½ë¾¶ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
for i=1:1:centersnum            %Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½haloï¿½Äµï¿½ï¿½ï¿½É³ï¿½ï¿½ë¾¶ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
    cenxh=result(1,i);          %ï¿½Ô¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÎªÔ²ï¿½Ä£ï¿½ï¿½Ô¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Äµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô¼ï¿½ï¿½ï¿½ÄºÚµï¿½Ä¾ï¿½ï¿½ï¿½Îªï¿½ë¾¶ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
    dis=10;                     %ï¿½ï¿½ï¿½Ú´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä³ï¿½ï¿½ë¾¶ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ßµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò³ï¿½ï¿½ë¾¶ï¿½ï¿½ï¿½ï¿½ï¿½Ò²È¥ï¿½Øµï¿?
    for j=1:1:n
        if decision(j,5)==i&&decision(j,7)==1
            if dis_matrix(cenxh,j)<dis
                dis=dis_matrix(cenxh,j);
            end
        end
    end
    selfdetectornum=selfdetectornum+1;
    selfdetector(selfdetectornum,1)=A(cenxh,1);
    selfdetector(selfdetectornum,2)=A(cenxh,2);
    selfdetector(selfdetectornum,3)=dis;
    selfdetector(selfdetectornum,4)=cenxh;
    selfdetector(selfdetectornum,5)=i;
    for j1=1:1:n
        j=rho_vector(j1,1);
        if decision(j,5)==i &&decision(j,6)==0
                for ii=1:1:selfdetectornum
                    if dis_matrix(j,selfdetector(ii,4))<selfdetector(ii,3)-selfradius/2
                        s=1;
                        break;
                    else
                        s=0;
                    end
                end 
                if s==0
                    dis=10;
                    for j3=j1:1:n
                         j2=rho_vector(j3,1);
                        if decision(j2,5)==i&&decision(j2,7)==1
                            if dis_matrix(j,j2)<dis
                                dis=dis_matrix(j,j2);
                            end
                            if dis<selfradius
                               dis=selfradius;
                               break;
                            end
                        end
                    end
                    selfdetectornum=selfdetectornum+1;
                    selfdetector(selfdetectornum,1)=A(j,1);
                    selfdetector(selfdetectornum,2)=A(j,2);
                    selfdetector(selfdetectornum,3)=dis;
                    selfdetector(selfdetectornum,4)=j;
                    selfdetector(selfdetectornum,5)=i;
                end
        end
    end
end

end









